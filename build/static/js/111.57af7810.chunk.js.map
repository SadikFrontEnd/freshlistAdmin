{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/chat/index.js","views/apps/chat/ChatSidebar.js","views/apps/chat/ChatLog.js","views/apps/chat/receiverProfile.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js"],"names":["defineProperty","module","exports","target","i","arguments","length","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","getChats","dispatch","axios","get","then","response","type","contacts","data","chats","catch","err","console","log","ChatSidebar","state","chatsContacts","messages","status","value","getChatContents","props","getContactChats","handleOnChange","e","setState","searchContacts","this","chat","chatContacts","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","onClick","handleActiveChat","markSeenAllMessages","mainSidebar","className","src","photoURL","alt","displayName","height","width","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","color","pill","Card","size","handleUserSidebar","userImg","FormGroup","Input","placeholder","onChange","options","wheelPropagation","React","Component","connect","chatApp","query","id","post","contactId","ChatLog","activeUser","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","handleReceiverSidebar","togglePinned","stroke","ref","el","onSubmit","preventDefault","Button","newMsg","toString","message","ReceiverProfile","receiverProfile","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","window","matchMedia","Chat","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","open","mediaQueryChanged","addListener","removeListener","Consumer","context","sidebar","docked","touch","sidebarClassName","contentClassName","pullRight","direction","_excluded","propTypes","children","PropTypes","node","string","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","row","check","inline","disabled","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","componentDidMount","isIos","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","offsetWidth","innerWidth","min","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarId","overlayClassName","overlayId","contentId"],"mappings":";uIAAA,IAAIA,EAAiB,EAAQ,IAgB7BC,EAAOC,QAfP,SAAuBC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaI,OAAOH,UAAUD,IAAM,GACvDK,EAAUD,OAAOE,KAAKH,GACkB,oBAAjCC,OAAOG,uBAChBF,EAAQG,KAAKC,MAAMJ,EAASD,OAAOG,sBAAsBJ,GAAQO,QAAO,SAAUC,GAChF,OAAOP,OAAOQ,yBAAyBT,EAAQQ,GAAKE,eAGxDR,EAAQS,SAAQ,SAAUC,GACxBnB,EAAeG,EAAQgB,EAAKZ,EAAOY,OAGvC,OAAOhB,GAEuBF,EAAOC,QAAQkB,YAAa,EAAMnB,EAAOC,QAAiB,QAAID,EAAOC,S,+OCdxFmB,EAAW,WACtB,OAAO,SAAAC,GACLC,IACGC,IAAI,sBACJC,MAAK,SAAAC,GACJJ,EAAS,CACPK,KAAM,eACNC,SAAUF,EAASG,KAAKD,SACxBE,MAAOJ,EAASG,KAAKC,WAGxBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,8BCZhC,kmGAAA5B,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAUwE,IAElE+B,EAAW,iKA4Cd,OA5Cc,oCAkBfC,MAAQ,CACNC,cAAe,GACfT,SAAU,GACVU,SAAU,GACVC,OAAQ,KACRC,MAAO,IACR,EAEDC,gBAAkB,WAChB,EAAKC,MAAMrB,WACX,EAAKqB,MAAMC,mBACZ,EAYDC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEN,MAAOK,EAAE1C,OAAOqC,QAChC,EAAKE,MAAMK,eAAeF,EAAE1C,OAAOqC,QACpC,EA3BA,OA2BA,qFAbD,8FACQQ,KAAKP,kBAAiB,OAC5BO,KAAKF,SAAS,CACZT,cAAeW,KAAKN,MAAMO,KAAKC,aAC/BtB,SAAUoB,KAAKN,MAAMO,KAAKrB,SAC1BE,MAAOkB,KAAKN,MAAMO,KAAKnB,MACvBS,OAAQS,KAAKN,MAAMO,KAAKV,SACxB,gDACH,kDAKA,IALA,oBAOD,WAAU,IAAD,OACP,EAA0DS,KAAKZ,MAAvDR,EAAQ,EAARA,SAAUS,EAAa,EAAbA,cAAeP,EAAK,EAALA,MAAOS,EAAM,EAANA,OAAQC,EAAK,EAALA,MAC1CW,EAAcX,EAAMlC,OACtB0C,KAAKN,MAAMO,KAAKG,iBAChBxB,EACEyB,EAAWb,EAAMlC,OACnB0C,KAAKN,MAAMO,KAAKK,cAChBjB,EACAkB,EACFJ,EAAY7C,OAAS,EACjB6C,EAAYK,KAAI,SAAAC,GAAO,OACrB,wBACEtC,IAAKsC,EAAQC,IACbC,QAAS,WACP,EAAKjB,MAAMkB,iBACTH,EAAQC,IACRD,EACA3B,EAAM2B,EAAQC,MAEhB,EAAKhB,MAAMmB,oBAAoBJ,EAAQC,KACvC,EAAKhB,MAAMoB,aAAY,KAGzB,yBAAKC,UAAU,QACb,0BAAMA,UAAU,wBACd,yBACEC,IAAKP,EAAQQ,SACbC,IAAKT,EAAQU,YACbC,OAAO,KACPC,MAAM,SAIZ,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,sBAAsBN,EAAQU,aAC5C,uBAAGJ,UAAU,YAAYN,EAAQa,aAKzC,KACFC,EACFlB,GAAYmB,MAAMC,QAAQpB,GACtBA,EAASG,KAAI,SAAAP,GACX,IAAIyB,EACA5C,EAAMmB,EAAKS,MAAQ5B,EAAMmB,EAAKS,KAAKiB,IAC/B7C,EAAMmB,EAAKS,KAAKiB,IAAIC,OAAO,GAAG,GAC9B,KACNC,EAAc,IAAIC,KAChBJ,GAAWA,EAAQK,KAAOL,EAAQK,KAAO,MAE3CC,EAAeH,EAAYI,eAAe,UAAW,CACnDC,MAAO,UAETC,EAAaN,EAAYO,UACvBC,EACFvD,EAAMmB,EAAKS,MAAQ5B,EAAMmB,EAAKS,KAAKiB,IAC/B7C,EAAMmB,EAAKS,KAAKiB,IAAI7D,QAClB,SAAAV,GAAC,OAAiB,IAAbA,EAAEkF,SAAiC,IAAblF,EAAEmF,UAC7BjF,OACF,KACFkF,OACkBC,IAApB3D,EAAMmB,EAAKS,KAAqB5B,EAAMmB,EAAKS,KAAO,KACpD,OACE,wBACEvC,IAAK8B,EAAKS,IACVC,QAAS,WACP,EAAKjB,MAAMkB,iBAAiBX,EAAKS,IAAKT,EAAMuC,GAC5C,EAAK9C,MAAMoB,aAAY,GACvB,EAAKpB,MAAMmB,oBAAoBZ,EAAKS,MAEtCK,UAAS,UACP,EAAKrB,MAAMgD,eAAiBzC,EAAKS,IAAM,SAAW,KAGpD,yBAAKK,UAAU,QACb,0BAAMA,UAAU,wBACd,yBACEC,IAAKf,EAAKgB,SACVC,IAAKjB,EAAKkB,YACVC,OAAO,KACPC,MAAM,SAIZ,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,sBAAsBd,EAAKkB,aACzC,uBAAGJ,UAAU,YACVW,EAAUA,EAAQiB,YAAc1C,EAAKqB,QAG1C,yBAAKP,UAAU,oCACb,0BAAMA,UAAU,qBACbiB,EAAe,IAAMG,GAEvBE,EAAa,EACZ,yBAAKtB,UAAU,cACb,kBAAC6B,EAAA,EAAK,CACJ7B,UAAU,uBACV8B,MAAM,UACNC,MAAI,GAEHT,IAGH,WAMd,KACN,OACE,kBAACU,EAAA,EAAI,CAAChC,UAAU,yBACd,0BACEA,UAAU,qBACVJ,QAAS,kBAAM,EAAKjB,MAAMoB,aAAY,KAEtC,kBAAC,IAAC,CAACkC,KAAM,MAEX,yBAAKjC,UAAU,qBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,0DACb,yBACEA,UAAU,SACVJ,QAAS,kBAAM,EAAKjB,MAAMuD,kBAAkB,UAE5C,yBAAKjC,IAAKkC,IAAShC,IAAI,eAAeE,OAAO,KAAKC,MAAM,OACxD,0BACEN,UACa,QAAXxB,EACI,qBACW,SAAXA,EACA,qBACW,YAAXA,EACA,wBACA,2BAKZ,kBAAC4D,EAAA,EAAS,CAACpC,UAAU,mDACnB,kBAACqC,EAAA,EAAK,CACJrC,UAAU,QACVpC,KAAK,OACL0E,YAAY,qCACZC,SAAU,SAAAzD,GAAC,OAAI,EAAKD,eAAeC,IACnCL,MAAOA,IAET,yBAAKuB,UAAU,yBACb,kBAAC,IAAM,CAACiC,KAAM,SAKtB,kBAAC,IAAgB,CACfjC,UAAU,4BACVwC,QAAS,CACPC,kBAAkB,IAGpB,wBAAIzC,UAAU,oBAAmB,SACjC,wBAAIA,UAAU,sCAAsCQ,GACpD,wBAAIR,UAAU,oBAAmB,YACjC,wBAAIA,UAAU,sCACXR,QAKV,uCAzND,SAAgCb,EAAON,GACrC,OACEM,EAAMO,KAAKC,aAAa5C,SAAW8B,EAAMc,cACzCR,EAAMO,KAAKrB,SAAStB,SAAW8B,EAAMR,UACrCc,EAAMO,KAAKnB,MAAMxB,SAAW8B,EAAMN,OAClCY,EAAMO,KAAKV,SAAWH,EAAMG,OAErB,CACLF,cAAeK,EAAMO,KAAKC,aAC1BtB,SAAUc,EAAMO,KAAKrB,SACrBE,MAAOY,EAAMO,KAAKnB,MAClBS,OAAQG,EAAMO,KAAKV,QAIhB,SACR,EAjBc,CAASkE,IAAMC,WAkOjBC,eALS,SAAAvE,GACtB,MAAO,CACLa,KAAMb,EAAMwE,QAAQ9E,SAGgB,CACtCT,WACAsB,gBDhO6B,WAC7B,OAAO,SAAArB,GACLC,IACGC,IAAI,8BACJC,MAAK,SAAAC,GACJJ,EAAS,CACPK,KAAM,oBACNG,MAAOJ,EAASG,UAGnBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QCuN9Be,eDxJ4B,SAAA8D,GAC5B,OAAO,SAAAvF,GACLA,EAAS,CACPK,KAAM,kBACNkF,YCqJJhD,oBDhJiC,SAAAiD,GACjC,OAAO,SAAAxF,GACLC,IACGwF,KAAK,gCAAiC,CACrCC,UAAWF,IAEZrF,MAAK,SAAAC,GACJJ,EAAS,CACPK,KAAM,eACNmF,UAGH/E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SCgIjB2E,CAKZxE,G,8DC3OG8E,EAAO,iKAgDV,OAhDU,oCAcX7E,MAAQ,CACNuC,IAAK,GACLuC,WAAY,KACZC,WAAY,MACb,EAEDC,kBAAoB,SAACN,EAAIO,EAAUC,GAC7BA,EAAKhH,OAAS,IAChB,EAAKoC,MAAM6E,YAAYT,EAAIO,EAAUC,GACrC,EAAKxE,SAAS,CACZ6B,IAAK,OAGV,EAQD6C,WAAa,SAACC,EAASC,GACrB,IAAMC,EAAe,IAAI7C,KAAKA,KAAK8C,MAAMH,IACnCI,EAAiB,IAAI/C,KAAKA,KAAK8C,MAAMF,IAC3C,OACEC,EAAaG,gBAAkBD,EAAeC,eAC9CH,EAAaI,aAAeF,EAAeE,YAC3CJ,EAAavC,YAAcyC,EAAezC,WAE7C,EAED4C,eAAiB,WACf,IAAMC,EAAgBC,IAASC,YAAY,EAAKC,UAChDH,EAAcI,UAAYJ,EAAcK,cACzC,EAnCA,OAmCA,8CApBD,WACEtF,KAAKgF,mBACN,gCACD,WACEhF,KAAKgF,mBACN,oBAiBD,WAAU,IAAD,OACCd,EAAelE,KAAKZ,MAApB8E,WACJqB,EAAgBrB,GAAcA,EAAWxD,IAAMwD,EAAWxD,IAAM,KAClEyD,EACED,GAAcA,EAAWxD,IACrBV,KAAKN,MAAMO,KAAKnB,MAAMyG,GACtB,KAEJhE,EACF4C,QAA6B1B,IAAf0B,GAA4BA,EAAWxC,IACjDwC,EAAWxC,IAAInB,KAAI,SAACP,EAAM7C,GAoExB,OACE,kBAAC,IAAMoI,SAAQ,CAACrH,IAAKf,GApEF,WACnB,GACEA,EAAI,IACH,EAAKoH,WAAWvE,EAAK8B,KAAMoC,EAAWxC,IAAIvE,EAAI,GAAG2E,MAElD,OACE,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,iBACZ,IAAIe,MAAOM,UACV,KACA,IAAIN,MAAOG,eAAe,UAAW,CACnCC,MAAO,YA0DhBuD,GACD,yBACE1E,UAAS,gBACS,IAAhBd,EAAKsC,OAAkB,YAAc,eArDvCnF,EAAI,GAEY,IAAhB6C,EAAKsC,SAC4B,IAAjC4B,EAAWxC,IAAIvE,EAAI,GAAGmF,OAGpB,yBAAKxB,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEC,IAAKkC,IACLhC,IAAI,cACJE,OAAO,KACPC,MAAM,UAKW,IAAhBpB,EAAKsC,OAEZ,yBAAKxB,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEC,IAAKkD,EAAWjD,SAChBC,IAAI,cACJE,OAAO,KACPC,MAAM,SAMP,GAIP,yBAAKN,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEC,IAAKf,EAAKsC,OAASW,IAAUgB,EAAWjD,SACxCC,IAAI,cACJE,OAAO,KACPC,MAAM,SAeZ,yBAAKN,UAAU,aACb,yBAAKA,UAAU,gBAAgBd,EAAK0C,mBAM9C,KAEN,OACE,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBACEA,UAAS,0BACQ,OAAfmD,EAAsB,SAAW,WAEnC,0BAAMnD,UAAU,wBACd,kBAAC,IAAa,CAACiC,KAAM,MAEvB,wBACEjC,UAAU,4CACVJ,QAAS,WACP,IAA+B,IAA3B,EAAKjB,MAAMgG,IAAIC,QAGjB,OAAO,KAFP,EAAKjG,MAAMoB,aAAY,KAIxB,uBAIP,yBACEC,UAAS,sBACQ,OAAfmD,EAAsB,SAAW,YAEnC,yBAAKnD,UAAU,eACb,4BAAQA,UAAU,qEAChB,yBAAKA,UAAU,6BACb,yBACEA,UAAU,wCACVJ,QAAS,kBAAM,EAAKjB,MAAMoB,aAAY,KACtC,kBAAC,IAAI,CAACkC,KAAM,MAEd,yBACEjC,UAAU,0CACVJ,QAAS,kBAAM,EAAKjB,MAAMkG,sBAAsB,UAChD,yBACE5E,IAAoB,OAAfkD,EAAsBA,EAAWjD,SAAW,GACjDC,IAAoB,OAAfgD,EAAsBA,EAAW/C,YAAc,GACpDC,OAAO,KACPC,MAAM,OAER,0BACEN,UAAS,gCAEM,OAAfmD,GACsB,mBAAtBA,EAAW3E,OACP,qBACe,OAAf2E,GAA6C,SAAtBA,EAAW3E,OAClC,qBACe,OAAf2E,GAA6C,YAAtBA,EAAW3E,OAClC,wBACA,uBAAsB,6BAK9B,wBAAIwB,UAAU,QACI,OAAfmD,EAAsBA,EAAW/C,YAAc,KAGpD,0BACEJ,UAAU,WACVJ,QAAS,WACHwD,GACF,EAAKzE,MAAMmG,aACT3B,EAAWxD,KACVyD,EAAWE,YAIlB,kBAAC,IAAI,CACHrB,KAAM,GACN8C,OACE3B,IAAsC,IAAxBA,EAAWE,SACrB,UACA,eAMd,kBAAC,IAAgB,CACftD,UAAU,aACVwC,QAAS,CACPC,kBAAkB,GAEpBuC,IAAK,SAAAC,GACH,EAAKZ,SAAWY,IAElB,yBAAKjF,UAAU,SAASQ,IAE1B,yBAAKR,UAAU,iBACb,0BACEA,UAAU,2CACVkF,SAAU,SAAApG,GACRA,EAAEqG,iBACF,EAAK9B,kBACHF,EAAWxD,KACX,EACA,EAAKtB,MAAMuC,IACXuC,KAGJ,kBAACd,EAAA,EAAK,CACJzE,KAAK,OACLoC,UAAU,qBACVsC,YAAY,oBACZ7D,MAAOQ,KAAKZ,MAAMuC,IAClB2B,SAAU,SAAAzD,GACRA,EAAEqG,iBACF,EAAKpG,SAAS,CACZ6B,IAAK9B,EAAE1C,OAAOqC,WAIpB,kBAAC2G,EAAA,EAAM,CAACtD,MAAM,WACZ,kBAAC,IAAI,CAAC9B,UAAU,YAAYiC,KAAM,KAClC,0BAAMjC,UAAU,qBAAoB,iBAQnD,uCA/QD,SAAgCrB,EAAON,GACrC,OACEM,EAAMwE,aAAe9E,EAAM+E,YAC3BzE,EAAMyE,aAAe/E,EAAM+E,WAEpB,CACLD,WAAYxE,EAAMwE,WAClBC,WAAYzE,EAAMyE,YAIf,SACR,EAbU,CAASV,IAAMC,WAuRbC,eALS,SAAAvE,GACtB,MAAO,CACLa,KAAMb,EAAMwE,QAAQ9E,SAGgB,CAAE+G,aFjQd,SAAC/B,EAAItE,GAC/B,OAAO,SAAAlB,GACLC,IACGwF,KAAK,6BAA8B,CAClCC,UAAWF,EACXtE,UAEDf,MAAK,SAAAC,GACJJ,EAAS,CACPK,KAAM,aACNmF,KACAtE,aAGHT,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QEmPwBuF,YF/O7B,SAACT,EAAIO,EAAUC,GACxC,OAAIA,EAAKhH,OAAS,EACT,SAAAgB,GACL,IAAI8H,EAAS,CACXzD,YAAa2B,EACb/B,QAAQ,EACRD,QAAQ,EACRP,MAAM,IAAID,MAAOuE,YAEnB9H,IACGwF,KAAK,6BAA8B,CAClCC,UAAWF,EACXwC,QAASF,EACT/B,aAED5F,MAAK,SAAAC,GACJJ,EAAS,CACPK,KAAM,eACNgD,IAAKyE,EACLtC,KACAO,WACAC,SAEFhG,EAASD,QAEVU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,YAG9B,IEmNW2E,CAAwDM,GC1NxDsC,EAnEM,iKAYlB,OAZkB,oCAUnBnH,MAAQ,CACN8E,WAAY,MACb,EAHA,OAGA,mCAED,WAAU,IAAD,OACCA,EAAelE,KAAKZ,MAApB8E,WACR,OACE,yBACEnD,UAAS,+BACPf,KAAKN,MAAM8G,gBAAkB,OAAS,OAGxC,4BAAQzF,UAAU,uBAChB,0BACEA,UAAU,aACVJ,QAAS,kBAAM,EAAKjB,MAAMkG,sBAAsB,WAEhD,kBAAC,IAAC,CAAC5C,KAAM,MAEX,yBAAKjC,UAAU,0BACb,yBAAKA,UAAU,UACb,yBACEC,IAAoB,OAAfkD,EAAsBA,EAAWjD,SAAW,KACjDC,IAAoB,OAAfgD,EAAsBA,EAAW/C,YAAc,KACpDC,OAAO,KACPC,MAAM,OAER,0BACEN,UAAS,UACQ,OAAfmD,GAA6C,mBAAtBA,EAAW3E,OAC9B,qBACe,OAAf2E,GAA6C,SAAtBA,EAAW3E,OAClC,qBACe,OAAf2E,GAA6C,YAAtBA,EAAW3E,OAClC,wBACA,uBAAsB,wBAIhC,wBAAIwB,UAAU,kBACI,OAAfmD,EAAsBA,EAAW/C,YAAc,QAItD,kBAAC,IAAgB,CACfJ,UAAU,gCACVwC,QAAS,CACPC,kBAAkB,IAGpB,4BAAI,SACJ,2BAAmB,OAAfU,EAAsBA,EAAW5C,MAAQ,WAIpD,uCAhED,SAAgC5B,EAAON,GACrC,OAAIM,EAAMwE,aAAe9E,EAAM8E,WACtB,CACLA,WAAYxE,EAAMwE,YAIf,SACR,EATkB,CAAST,IAAMC,W,QCK9B+C,EAAW,iKAed,OAfc,oCAWfrH,MAAQ,CACNI,MACE,+GACFD,OAAQ,MACT,EANA,OAMA,mCAED,WAAU,IAAD,OACDA,EAASS,KAAKZ,MAAMG,OAC1B,OACE,yBACEwB,UAAS,+BACPf,KAAKN,MAAMgH,YAAc,OAAS,OAGpC,4BAAQ3F,UAAU,uBAChB,yBACEA,UAAU,aACVJ,QAAS,kBAAM,EAAKjB,MAAMuD,kBAAkB,WAE5C,kBAAC,IAAC,CAACD,KAAM,MAEX,yBAAKjC,UAAU,0BACb,yBAAKA,UAAU,UACb,yBAAKC,IAAKkC,IAAShC,IAAI,eAAeE,OAAO,KAAKC,MAAM,OACxD,0BACEN,UAAS,UACI,YAAXxB,EACI,wBACW,QAAXA,EACA,qBACW,SAAXA,EACA,qBACA,uBAAsB,wBAIhC,wBAAIwB,UAAU,kBAAiB,cAGnC,yBAAKA,UAAU,wBACb,kBAAC,IAAgB,CACfA,UAAU,cACVwC,QAAS,CACPC,kBAAkB,IAGpB,4BAAI,SACJ,yBAAKzC,UAAU,cACb,kBAACqC,EAAA,EAAK,CACJzE,KAAK,WACLgI,KAAK,OACL7C,GAAG,YACH8C,KAAK,IACLpH,MAAOQ,KAAKZ,MAAMI,MAClBqH,UAAU,MACVvD,SAAU,SAAAzD,GAAC,OAAI,EAAKC,SAAS,CAAEN,MAAOK,EAAE1C,OAAOqC,WAEjD,2BAAOuB,UAAU,6BAA2B,UACtCf,KAAKZ,MAAMI,MAAMlC,OAAM,YAG/B,wBAAIyD,UAAU,QAAO,UACrB,wBAAIA,UAAU,kCACZ,wBAAIA,UAAU,SACZ,kBAAC,IAAK,CACJ+F,MAAM,SACNjE,MAAM,UACNkE,gBAAgB,EAChBJ,KAAK,aACLhG,QAAS,kBAAM,EAAKjB,MAAMsH,aAAa,cAG3C,wBAAIjG,UAAU,SACZ,kBAAC,IAAK,CACJ+F,MAAM,iBACNjE,MAAM,SACNkE,gBAAgB,EAChBJ,KAAK,aACLhG,QAAS,kBAAM,EAAKjB,MAAMsH,aAAa,WAG3C,wBAAIjG,UAAU,SACZ,kBAAC,IAAK,CACJ+F,MAAM,OACNjE,MAAM,UACNkE,gBAAgB,EAChBJ,KAAK,aACLhG,QAAS,kBAAM,EAAKjB,MAAMsH,aAAa,YAG3C,wBAAIjG,UAAU,SACZ,kBAAC,IAAK,CACJ+F,MAAM,UACNjE,MAAM,YACNkE,gBAAgB,EAChBJ,KAAK,aACLhG,QAAS,kBAAM,EAAKjB,MAAMsH,aAAa,sBAQtD,uCAlHD,SAAgCtH,EAAON,GACrC,OAAIM,EAAMO,KAAKV,SAAWH,EAAMG,OACvB,CACLA,OAAQG,EAAMO,KAAKV,QAIhB,SACR,EATc,CAASkE,IAAMC,WA0HjBC,eALS,SAAAvE,GACtB,MAAO,CACLa,KAAMb,EAAMwE,QAAQ9E,SAGgB,CAAEkI,aJjDd,SAAAzH,GAC1B,OAAO,SAAAjB,GACLA,EAAS,CACPK,KAAM,gBACNY,cI6CSoE,CAA2C8C,GC1HpDf,G,QAAMuB,OAAOC,WAAW,uBAExBC,EAAI,iKAiEP,OAjEO,oCACR/H,MAAQ,CACNsH,aAAa,EACbU,cAAe1B,EAAIC,QACnB0B,aAAa,EACb3E,aAAc,KACdyB,WAAY,KACZD,WAAY,KACZsC,iBAAiB,EACjBc,aAAa,GACd,EAEDrE,kBAAoB,SAAA1D,GACH,SAAXA,EACF,EAAKO,SAAS,CACZ4G,aAAa,IAGf,EAAK5G,SAAS,CACZ4G,aAAa,KAGlB,EACD9F,iBAAmB,SAACkD,EAAIyD,EAAMzI,GAC5B,EAAKgB,SAAS,CACZ4C,aAAcoB,EACdI,WAAYqD,EACZpD,WAAYrF,KAEf,EAUD0I,iBAAmB,SAAAC,GACjB,EAAK3H,SAAS,CAAEuH,YAAaI,KAC9B,EAEDC,kBAAoB,WAClB,EAAK5H,SAAS,CAAEsH,cAAe1B,EAAIC,QAAS0B,aAAa,KAC1D,EAEDzB,sBAAwB,SAAArG,GACX,SAAXA,EACI,EAAKO,SAAS,CACZ0G,iBAAiB,IAEnB,EAAK1G,SAAS,CACZ0G,iBAAiB,KAExB,EAEDvD,kBAAoB,SAAA1D,GACP,SAAXA,EACI,EAAKO,SAAS,CACZwH,aAAa,IAEf,EAAKxH,SAAS,CACZwH,aAAa,KAEpB,EA2DA,OA3DA,sDAlCD,WACE5B,EAAIiC,YAAY3H,KAAK0H,qBACtB,kCAED,WACEhC,EAAIkC,eAAe5H,KAAK0H,qBACzB,oBA8BD,WAAU,IAAD,OACP,OACE,yBAAK3G,UAAU,sCACb,yBACEA,UAAS,uBACPf,KAAKZ,MAAMoH,iBACXxG,KAAKZ,MAAMkI,aACXtH,KAAKZ,MAAMiI,YACP,OACA,UAEN1G,QAAS,WACP,EAAKiF,sBAAsB,SAC3B,EAAK3C,kBAAkB,SACvB,EAAKuE,kBAAiB,MAG1B,kBAAC,IAAcK,SAAQ,MACpB,SAAAC,GAAO,OACN,kBAAC,IAAO,CACNC,QACE,kBAAC,EAAkB,CACjBrF,aAAc,EAAKtD,MAAMsD,aACzB9B,iBAAkB,EAAKA,iBACvBqC,kBAAmB,EAAKA,kBACxBnC,YAAa,EAAK0G,mBAGtBQ,OAAQ,EAAK5I,MAAMgI,cACnBK,KAAM,EAAKrI,MAAMiI,YACjBY,OAAO,EACPC,iBAAiB,eACjBC,iBAAiB,0BACjBC,UAAuC,QAA5BN,EAAQ1I,MAAMiJ,WAAqB,SAKpD,kBAAC,EAAW,CACV3B,YAAa1G,KAAKZ,MAAMkI,YACxBrE,kBAAmBjD,KAAKiD,oBAE1B,kBAAC,EAAO,CACNkB,WAAYnE,KAAKZ,MAAM+E,WACvBD,WAAYlE,KAAKZ,MAAM8E,WACvB0B,sBAAuB5F,KAAK4F,sBAC5B9E,YAAad,KAAKwH,iBAClB9B,IAAKA,EACL9E,iBAAkBZ,KAAKY,mBAEzB,kBAAC,EAAe,CACdsD,WAAYlE,KAAKZ,MAAM8E,WACvBsC,gBAAiBxG,KAAKZ,MAAMoH,gBAC5BZ,sBAAuB5F,KAAK4F,6BAInC,EA5HO,CAASnC,IAAMC,WA+HVyD,a,iCCzIf,yFAIImB,EAAY,CAAC,YAAa,YAAa,OAAQ,SAAU,QAAS,UAAW,MAAO,QAAS,YAAa,YAO1GC,EAAY,CACdC,SAAUC,IAAUC,KACpB/J,KAAM8J,IAAUE,OAChB3F,KAAMyF,IAAUG,UAAU,CAACH,IAAUI,OAAQJ,IAAUE,SACvDG,OAAQL,IAAUE,OAClBI,MAAON,IAAUO,KACjBC,QAASR,IAAUO,KACnBE,IAAKC,cACLC,SAAUX,IAAUG,UAAU,CAACH,IAAUY,OAAQZ,IAAUa,KAAMb,IAAUE,SAC3EY,UAAWd,IAAUO,KACrBQ,MAAOf,IAAUO,KACjBjI,UAAW0H,IAAUE,OACrBc,UAAWhB,IAAUY,QAMnBjG,EAAqB,SAAUsG,GAGjC,SAAStG,EAAM1D,GACb,IAAIiK,EAKJ,OAHAA,EAAQD,EAAiBE,KAAK5J,KAAMN,IAAUM,MACxC6J,OAASF,EAAME,OAAOC,KAAKC,YAAuBJ,IACxDA,EAAMK,MAAQL,EAAMK,MAAMF,KAAKC,YAAuBJ,IAC/CA,EARTM,YAAe7G,EAAOsG,GAWtB,IAAIQ,EAAS9G,EAAM+G,UA8EnB,OA5EAD,EAAOL,OAAS,SAAgB9D,GAC1B/F,KAAKN,MAAM0J,UACbpJ,KAAKN,MAAM0J,SAASrD,GAGtB/F,KAAK+F,IAAMA,GAGbmE,EAAOF,MAAQ,WACThK,KAAK+F,KACP/F,KAAK+F,IAAIiE,SAIbE,EAAOE,OAAS,WACd,IAAIC,EAAcrK,KAAKN,MACnBqB,EAAYsJ,EAAYtJ,UACxB0I,EAAYY,EAAYZ,UACxB9K,EAAO0L,EAAY1L,KACnBmK,EAASuB,EAAYvB,OACrBC,EAAQsB,EAAYtB,MACpBE,EAAUoB,EAAYpB,QACtBC,EAAMmB,EAAYnB,IAClBM,EAAQa,EAAYb,MACpBD,EAAYc,EAAYd,UACxBH,EAAWiB,EAAYjB,SACvBkB,EAAaC,YAA8BF,EAAa/B,GAExDkC,EAAa,CAAC,QAAS,YAAYC,QAAQ9L,IAAS,EACpD+L,EAAe,IAAIC,OAAO,MAAO,KAKjCC,EAAM1B,IAFiB,WAATvK,GADW,aAATA,EAG6BA,EAAO,SACpDkM,EAAmB,eAEnBtB,GACFsB,GAAsC,aACtCD,EAAM1B,GAAO,SATU,SAATvK,EAWdkM,GAAsC,QARd,UAATlM,EAUfkM,GAAsC,SAC7BL,IAEPK,EADErB,EACiB,KAEA,oBAInBc,EAAWtH,MAAQ0H,EAAaI,KAAKR,EAAWtH,QAClD+H,mBAAS,oFACTjC,EAASwB,EAAWtH,YACbsH,EAAWtH,MAGpB,IAAIgI,EAAUC,0BAAgBC,IAAWnK,EAAWkI,GAAW,aAAcF,GAAS,aAAYD,GAAS,gBAAkBA,EAAgB+B,GAAmBpB,GAWhK,OATY,UAARmB,GAAmB1B,GAAsB,oBAARA,KACnCoB,EAAW3L,KAAOA,GAGhB2L,EAAW9B,WAAce,GAAsB,WAAT5K,GAAoC,kBAARiM,GAA4B,WAARA,IACxFG,mBAAS,yBAA4BpM,EAAO,6EACrC2L,EAAW9B,UAGA/E,IAAM0H,cAAcP,EAAKQ,YAAS,GAAId,EAAY,CACpEvE,IAAKqD,EACLrI,UAAWiK,EACX,eAAgB/B,MAIb7F,EA1FgB,CA2FvBK,IAAMC,WAERN,EAAMmF,UAAYA,EAClBnF,EAAMiI,aAlGa,CACjB1M,KAAM,QAkGOyE,O,iCC5Hf,yEAEIkF,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpB4C,IAAK7C,IAAUO,KACfuC,MAAO9C,IAAUO,KACjBwC,OAAQ/C,IAAUO,KAClByC,SAAUhD,IAAUO,KACpBE,IAAKC,cACLpI,UAAW0H,IAAUE,OACrBc,UAAWhB,IAAUY,QAMnBlG,EAAY,SAAmBzD,GACjC,IAAIqB,EAAYrB,EAAMqB,UAClB0I,EAAY/J,EAAM+J,UAClB6B,EAAM5L,EAAM4L,IACZG,EAAW/L,EAAM+L,SACjBF,EAAQ7L,EAAM6L,MACdC,EAAS9L,EAAM8L,OACfZ,EAAMlL,EAAMwJ,IACZoB,EAAaC,YAA8B7K,EAAO4I,GAElD0C,EAAUC,0BAAgBC,IAAWnK,IAAWuK,GAAM,MAAeC,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBhC,GAMtM,MAJY,aAARmB,IACFN,EAAWmB,SAAWA,GAGJhI,IAAM0H,cAAcP,EAAKQ,YAAS,GAAId,EAAY,CACpEvJ,UAAWiK,MAIf7H,EAAUoF,UAAYA,EACtBpF,EAAUkI,aA1BS,CACjBnC,IAAK,OA0BQ/F,O,iCC5Cf,wEAOIuI,EACI,CACJC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,SAAU,UAPVN,EASO,CACPO,OAAQ,EACRN,SAAU,WACVC,IAAK,EACLG,OAAQ,EACRG,WAAY,yBACZC,iBAAkB,iCAClBC,WAAY,YACZC,UAAW,QAjBXX,EAmBO,CACPC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRM,UAAW,OACXC,wBAAyB,QACzBJ,WAAY,yCA3BZR,EA6BO,CACPO,OAAQ,EACRN,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRQ,QAAS,EACTC,WAAY,SACZN,WAAY,gDACZO,gBAAiB,kBAvCjBf,EAyCU,CACVO,OAAQ,EACRN,SAAU,QACVC,IAAK,EACLG,OAAQ,GAIRW,EAEJ,SAAUC,GAGR,SAASD,EAAQhN,GACf,IAAIiK,EAmBJ,OAjBAA,EAAQgD,EAAW/C,KAAK5J,KAAMN,IAAUM,MAClCZ,MAAQ,CAEZwN,aAAclN,EAAMmN,oBAEpBC,gBAAiB,KACjBC,YAAa,KACbC,cAAe,KAEfC,eAAe,GAEjBtD,EAAMuD,eAAiBvD,EAAMuD,eAAepD,KAAKC,IAAuBA,IAAuBJ,KAC/FA,EAAMwD,aAAexD,EAAMwD,aAAarD,KAAKC,IAAuBA,IAAuBJ,KAC3FA,EAAMyD,YAAczD,EAAMyD,YAAYtD,KAAKC,IAAuBA,IAAuBJ,KACzFA,EAAM0D,WAAa1D,EAAM0D,WAAWvD,KAAKC,IAAuBA,IAAuBJ,KACvFA,EAAM2D,SAAW3D,EAAM2D,SAASxD,KAAKC,IAAuBA,IAAuBJ,KACnFA,EAAM4D,eAAiB5D,EAAM4D,eAAezD,KAAKC,IAAuBA,IAAuBJ,KACxFA,EAtBTM,IAAeyC,EAASC,GAyBxB,IAAIzC,EAASwC,EAAQvC,UAsQrB,OApQAD,EAAOsD,kBAAoB,WACzB,IAAIC,EAAQ,mBAAmB3C,KAAK4C,UAAYA,UAAUC,UAAY,IACtE3N,KAAKF,SAAS,CACZmN,cAAiC,kBAAXhG,QAAuB,iBAAkBA,SAAWwG,IAE5EzN,KAAK4N,oBAGP1D,EAAO2D,mBAAqB,WAErB7N,KAAK8N,cACR9N,KAAK4N,oBAIT1D,EAAOiD,aAAe,SAAsBY,GAE1C,IAAK/N,KAAK8N,aAAc,CACtB,IAAI7F,EAAQ8F,EAAGC,cAAc,GAC7BhO,KAAKF,SAAS,CACZgN,gBAAiB7E,EAAMgG,WACvBlB,YAAa9E,EAAMiG,QACnBlB,cAAe/E,EAAMiG,YAK3BhE,EAAOkD,YAAc,SAAqBW,GACxC,GAAI/N,KAAK8N,aACP,IAAK,IAAIK,EAAM,EAAGA,EAAMJ,EAAGC,cAAc1Q,OAAQ6Q,IAE/C,GAAIJ,EAAGC,cAAcG,GAAKF,aAAejO,KAAKZ,MAAM0N,gBAAiB,CACnE9M,KAAKF,SAAS,CACZkN,cAAee,EAAGC,cAAcG,GAAKD,UAEvC,QAMRhE,EAAOmD,WAAa,WAClB,GAAIrN,KAAK8N,aAAc,CAErB,IAAIM,EAAapO,KAAKqO,qBAElBrO,KAAKN,MAAM+H,MAAQ2G,EAAapO,KAAKZ,MAAMwN,aAAe5M,KAAKN,MAAM4O,qBAAuBtO,KAAKN,MAAM+H,MAAQ2G,EAAapO,KAAKN,MAAM4O,qBACzItO,KAAKN,MAAM6O,WAAWvO,KAAKN,MAAM+H,MAGnCzH,KAAKF,SAAS,CACZgN,gBAAiB,KACjBC,YAAa,KACbC,cAAe,SAQrB9C,EAAOoD,SAAW,WACZtN,KAAK8N,cAAgB9N,KAAKwO,4BAC5BxO,KAAKF,SAAS,CACZgN,gBAAiB,KACjBC,YAAa,KACbC,cAAe,QAMrB9C,EAAOsE,yBAA2B,WAShC,OANIxO,KAAKN,MAAM0I,UACYqG,KAAKC,IAAI1O,KAAKZ,MAAM4N,cAAgBhN,KAAKZ,MAAM2N,aA5J9C,GA8JD0B,KAAKC,IAAI1O,KAAKZ,MAAM2N,YAAc/M,KAAKZ,MAAM4N,eA9J5C,IAoK9B9C,EAAO4D,WAAa,WAClB,OAAsC,OAA/B9N,KAAKZ,MAAM0N,iBAGpB5C,EAAOgD,eAAiB,WAClBlN,KAAKN,MAAM+H,MACbzH,KAAKN,MAAM6O,WAAU,IAIzBrE,EAAO0D,iBAAmB,WACxB,IAAIvM,EAAQrB,KAAK+H,QAAQ4G,YAErBtN,IAAUrB,KAAKZ,MAAMwN,cACvB5M,KAAKF,SAAS,CACZ8M,aAAcvL,KAKpB6I,EAAOqD,eAAiB,SAAwB7E,GAC9C1I,KAAK+H,QAAUW,GAIjBwB,EAAOmE,kBAAoB,WAIzB,OAAIrO,KAAKN,MAAM0I,UACTpI,KAAKN,MAAM+H,MAAQR,OAAO2H,WAAa5O,KAAKZ,MAAM2N,YAAc/M,KAAKZ,MAAMwN,aACzE5M,KAAKZ,MAAM4N,cAAgBhN,KAAKZ,MAAM2N,YACjC/M,KAAKZ,MAAMwN,aAAe5M,KAAKZ,MAAM2N,YAAc/M,KAAKZ,MAAM4N,cAGhEhN,KAAKZ,MAAMwN,aAGb6B,KAAKI,IAAI5H,OAAO2H,WAAa5O,KAAKZ,MAAM4N,cAAehN,KAAKZ,MAAMwN,cAGvE5M,KAAKN,MAAM+H,MAAQzH,KAAKZ,MAAM2N,YAAc/M,KAAKZ,MAAMwN,aACrD5M,KAAKZ,MAAM4N,cAAgBhN,KAAKZ,MAAM2N,YACjC/M,KAAKZ,MAAMwN,aAGb5M,KAAKZ,MAAMwN,aAAe5M,KAAKZ,MAAM2N,YAAc/M,KAAKZ,MAAM4N,cAGhEyB,KAAKI,IAAI7O,KAAKZ,MAAM4N,cAAehN,KAAKZ,MAAMwN,eAGvD1C,EAAOE,OAAS,WACd,IAcI0E,EAdAC,EAAeC,IAAc,GAAItD,EAAuB1L,KAAKN,MAAMuP,OAAOlH,SAE1EmH,EAAeF,IAAc,GAAItD,EAAuB1L,KAAKN,MAAMuP,OAAOE,SAE1EC,EAAeJ,IAAc,GAAItD,EAAuB1L,KAAKN,MAAMuP,OAAOI,SAE1EC,EAAWtP,KAAKZ,MAAM6N,eAAiBjN,KAAKN,MAAMuI,MAClD6F,EAAa9N,KAAK8N,aAClByB,EAAY,CACdxO,UAAWf,KAAKN,MAAM8P,cACtBC,MAAOT,IAAc,GAAItD,EAAoB1L,KAAKN,MAAMuP,OAAOS,MAC/DC,KAAM,aACN7L,GAAI9D,KAAKN,MAAMkQ,QAGbC,EAAe7P,KAAKN,MAAMoQ,SAAWhC,GAAc9N,KAAKN,MAAM+H,MAAQzH,KAAKN,MAAMsI,QAoBrF,GAlBIhI,KAAKN,MAAM0I,WACb2G,EAAajD,MAAQ,EACrBiD,EAAagB,UAAY,mBACzBhB,EAAaiB,gBAAkB,mBAE3BH,IACFd,EAAakB,UAAY,sCAG3BlB,EAAalD,KAAO,EACpBkD,EAAagB,UAAY,oBACzBhB,EAAaiB,gBAAkB,oBAE3BH,IACFd,EAAakB,UAAY,oCAIzBnC,EAAY,CACd,IAAIoC,EAAalQ,KAAKqO,oBAAsBrO,KAAKZ,MAAMwN,aAEnD5M,KAAKN,MAAM0I,WACb2G,EAAagB,UAAY,cAAmC,KAAlB,EAAIG,GAAoB,KAClEnB,EAAaiB,gBAAkB,cAAmC,KAAlB,EAAIE,GAAoB,OAExEnB,EAAagB,UAAY,eAAoC,KAAlB,EAAIG,GAAoB,KACnEnB,EAAaiB,gBAAkB,eAAoC,KAAlB,EAAIE,GAAoB,MAI3Ed,EAAa7C,QAAU2D,EACvBd,EAAa5C,WAAa,eACjBxM,KAAKN,MAAMsI,QAEY,IAA5BhI,KAAKZ,MAAMwN,eACbmC,EAAagB,UAAY,iBACzBhB,EAAaiB,gBAAkB,kBAI7BhQ,KAAKN,MAAM0I,UACb8G,EAAapD,MAAQ9L,KAAKZ,MAAMwN,aAAe,KAE/CsC,EAAarD,KAAO7L,KAAKZ,MAAMwN,aAAe,MAEvC5M,KAAKN,MAAM+H,OAEpBsH,EAAagB,UAAY,iBACzBhB,EAAaiB,gBAAkB,iBAE/BZ,EAAa7C,QAAU,EACvB6C,EAAa5C,WAAa,WAU5B,IAPIsB,GAAe9N,KAAKN,MAAMyQ,cAC5BpB,EAAa7C,WAAa,OAC1B6C,EAAa5C,iBAAmB,OAChC+C,EAAahD,WAAa,OAC1BkD,EAAalD,WAAa,QAGxBoD,EACF,GAAItP,KAAKN,MAAM+H,KACb8H,EAAUpC,aAAenN,KAAKmN,aAC9BoC,EAAUnC,YAAcpN,KAAKoN,YAC7BmC,EAAUlC,WAAarN,KAAKqN,WAC5BkC,EAAUa,cAAgBpQ,KAAKqN,WAC/BkC,EAAUjC,SAAWtN,KAAKsN,aACrB,CACL,IAAI+C,EAAkBrB,IAAc,GAAItD,EAA0B1L,KAAKN,MAAMuP,OAAOH,YAEpFuB,EAAgBhP,MAAQrB,KAAKN,MAAM4Q,iBAE/BtQ,KAAKN,MAAM0I,UACbiI,EAAgBvE,MAAQ,EAExBuE,EAAgBxE,KAAO,EAGzBiD,EAAarL,IAAM0H,cAAc,MAAO,CACtCsE,MAAOY,EACPlD,aAAcnN,KAAKmN,aACnBC,YAAapN,KAAKoN,YAClBC,WAAYrN,KAAKqN,WACjB+C,cAAepQ,KAAKqN,aAK1B,OAAO5J,IAAM0H,cAAc,MAAOoE,EAAW9L,IAAM0H,cAAc,MAAO,CACtEpK,UAAWf,KAAKN,MAAMwI,iBACtBuH,MAAOV,EACPhJ,IAAK/F,KAAKuN,eACVzJ,GAAI9D,KAAKN,MAAM6Q,WACdvQ,KAAKN,MAAMqI,SAAUtE,IAAM0H,cAAc,MAAO,CACjDpK,UAAWf,KAAKN,MAAM8Q,iBACtBf,MAAOL,EACPzO,QAASX,KAAKkN,eACdpJ,GAAI9D,KAAKN,MAAM+Q,YACbhN,IAAM0H,cAAc,MAAO,CAC7BpK,UAAWf,KAAKN,MAAMyI,iBACtBsH,MAAOP,EACPpL,GAAI9D,KAAKN,MAAMgR,WACd5B,EAAY9O,KAAKN,MAAM8I,YAGrBkE,EAhST,CAiSEhJ,aAoDFgJ,EAAQrB,aAAe,CACrBrD,QAAQ,EACRP,MAAM,EACN0I,aAAa,EACblI,OAAO,EACPqI,iBAAkB,GAClBlI,WAAW,EACX0H,QAAQ,EACRxB,mBAAoB,GACpBC,UAAW,aACXU,OAAQ,GACRpC,oBAAqB,GAGRH","file":"static/js/111.57af7810.chunk.js","sourcesContent":["var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import axios from \"axios\"\r\n\r\nexport const getChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chats\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CONTACTS\",\r\n          contacts: response.data.contacts,\r\n          chats: response.data.chats\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getContactChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chat-contacts\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CHAT_CONTACTS\",\r\n          chats: response.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const togglePinned = (id, value) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/set-pinned/\", {\r\n        contactId: id,\r\n        value\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"SET_PINNED\",\r\n          id,\r\n          value\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const sendMessage = (id, isPinned, text) => {\r\n  if (text.length > 0) {\r\n    return dispatch => {\r\n      let newMsg = {\r\n        textContent: text,\r\n        isSent: true,\r\n        isSeen: false,\r\n        time: new Date().toString()\r\n      }\r\n      axios\r\n        .post(\"/api/app/chat/send-message\", {\r\n          contactId: id,\r\n          message: newMsg,\r\n          isPinned\r\n        })\r\n        .then(response => {\r\n          dispatch({\r\n            type: \"SEND_MESSAGE\",\r\n            msg: newMsg,\r\n            id,\r\n            isPinned,\r\n            text\r\n          })\r\n          dispatch(getChats())\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport const changeStatus = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"CHANGE_STATUS\",\r\n      status\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchContacts = query => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_CONTACTS\",\r\n      query\r\n    })\r\n  }\r\n}\r\n\r\nexport const markSeenAllMessages = id => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/mark-all-seen/\", {\r\n        contactId: id\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"MARK_AS_SEEN\",\r\n          id\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\r\nimport { X, Search } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n} from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.chat.chatContacts.length !== state.chatContacts ||\r\n      props.chat.contacts.length !== state.contacts ||\r\n      props.chat.chats.length !== state.chats ||\r\n      props.chat.status !== state.status\r\n    ) {\r\n      return {\r\n        chatsContacts: props.chat.chatContacts,\r\n        contacts: props.chat.contacts,\r\n        chats: props.chat.chats,\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    chatsContacts: [],\r\n    contacts: [],\r\n    messages: [],\r\n    status: null,\r\n    value: \"\"\r\n  }\r\n\r\n  getChatContents = () => {\r\n    this.props.getChats()\r\n    this.props.getContactChats()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getChatContents()\r\n    this.setState({\r\n      chatsContacts: this.props.chat.chatContacts,\r\n      contacts: this.props.chat.contacts,\r\n      chats: this.props.chat.chats,\r\n      status: this.props.chat.status\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchContacts(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { contacts, chatsContacts, chats, status, value } = this.state\r\n    const contactsArr = value.length\r\n      ? this.props.chat.filteredContacts\r\n      : contacts\r\n    const chatsArr = value.length\r\n      ? this.props.chat.filteredChats\r\n      : chatsContacts\r\n    let renderContacts =\r\n      contactsArr.length > 0\r\n        ? contactsArr.map(contact => (\r\n            <li\r\n              key={contact.uid}\r\n              onClick={() => {\r\n                this.props.handleActiveChat(\r\n                  contact.uid,\r\n                  contact,\r\n                  chats[contact.uid]\r\n                )\r\n                this.props.markSeenAllMessages(contact.uid)\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              <div className=\"pr-1\">\r\n                <span className=\"avatar avatar-md m-0\">\r\n                  <img\r\n                    src={contact.photoURL}\r\n                    alt={contact.displayName}\r\n                    height=\"38\"\r\n                    width=\"38\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"user-chat-info\">\r\n                <div className=\"contact-info\">\r\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\r\n                  <p className=\"truncate\">{contact.about}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))\r\n        : null\r\n    let renderChats =\r\n      chatsArr && Array.isArray(chatsArr)\r\n        ? chatsArr.map(chat => {\r\n            let lastMsg =\r\n                chats[chat.uid] && chats[chat.uid].msg\r\n                  ? chats[chat.uid].msg.slice(-1)[0]\r\n                  : null,\r\n              lastMsgDate = new Date(\r\n                lastMsg && lastMsg.time ? lastMsg.time : null\r\n              ),\r\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\r\n                month: \"short\"\r\n              }),\r\n              lastMsgDay = lastMsgDate.getDate()\r\n            let pendingMsg =\r\n              chats[chat.uid] && chats[chat.uid].msg\r\n                ? chats[chat.uid].msg.filter(\r\n                    i => i.isSeen === false && i.isSent !== true\r\n                  ).length\r\n                : null\r\n            let activeID =\r\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\r\n            return (\r\n              <li\r\n                key={chat.uid}\r\n                onClick={() => {\r\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\r\n                  this.props.mainSidebar(false)\r\n                  this.props.markSeenAllMessages(chat.uid)\r\n                }}\r\n                className={`${\r\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"pr-1\">\r\n                  <span className=\"avatar avatar-md m-0\">\r\n                    <img\r\n                      src={chat.photoURL}\r\n                      alt={chat.displayName}\r\n                      height=\"38\"\r\n                      width=\"38\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <div className=\"user-chat-info\">\r\n                  <div className=\"contact-info\">\r\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\r\n                    <p className=\"truncate\">\r\n                      {lastMsg ? lastMsg.textContent : chat.about}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"contact-meta d-flex- flex-column\">\r\n                    <span className=\"float-right mb-25\">\r\n                      {lastMsgMonth + \" \" + lastMsgDay}\r\n                    </span>\r\n                    {pendingMsg > 0 ? (\r\n                      <div className=\"unseen-msg\">\r\n                        <Badge\r\n                          className=\"badge-md float-right\"\r\n                          color=\"primary\"\r\n                          pill\r\n                        >\r\n                          {pendingMsg}\r\n                        </Badge>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )\r\n          })\r\n        : null\r\n    return (\r\n      <Card className=\"sidebar-content h-100\">\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"chat-fixed-search\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\r\n              <div\r\n                className=\"avatar\"\r\n                onClick={() => this.props.handleUserSidebar(\"open\")}\r\n              >\r\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\r\n                <span\r\n                  className={\r\n                    status === \"dnd\"\r\n                      ? \"avatar-status-busy\"\r\n                      : status === \"away\"\r\n                      ? \"avatar-status-away\"\r\n                      : status === \"offline\"\r\n                      ? \"avatar-status-offline\"\r\n                      : \"avatar-status-online\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\r\n              <Input\r\n                className=\"round\"\r\n                type=\"text\"\r\n                placeholder=\"Search contact or start a new chat\"\r\n                onChange={e => this.handleOnChange(e)}\r\n                value={value}\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Search size={15} />\r\n              </div>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"chat-user-list list-group\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\r\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">\r\n            {renderContacts}\r\n          </ul>\r\n        </PerfectScrollbar>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n})(ChatSidebar)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Input, Button } from \"reactstrap\"\r\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatLog extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.activeUser !== state.activeChat ||\r\n      props.activeChat !== state.activeChat\r\n    ) {\r\n      return {\r\n        activeUser: props.activeUser,\r\n        activeChat: props.activeChat\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    msg: \"\",\r\n    activeUser: null,\r\n    activeChat: null\r\n  }\r\n\r\n  handleSendMessage = (id, isPinned, text) => {\r\n    if (text.length > 0) {\r\n      this.props.sendMessage(id, isPinned, text)\r\n      this.setState({\r\n        msg: \"\"\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom()\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom()\r\n  }\r\n\r\n  handleTime = (time_to, time_from) => {\r\n    const date_time_to = new Date(Date.parse(time_to))\r\n    const date_time_from = new Date(Date.parse(time_from))\r\n    return (\r\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n      date_time_to.getMonth() === date_time_from.getMonth() &&\r\n      date_time_to.getDate() === date_time_from.getDate()\r\n    )\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\r\n    chatContainer.scrollTop = chatContainer.scrollHeight\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\r\n      activeChat =\r\n        activeUser && activeUser.uid\r\n          ? this.props.chat.chats[activeUserUid]\r\n          : null\r\n\r\n    let renderChats =\r\n      activeChat && activeChat !== undefined && activeChat.msg\r\n        ? activeChat.msg.map((chat, i) => {\r\n            let renderSentTime = () => {\r\n              if (\r\n                i > 0 &&\r\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\r\n              ) {\r\n                return (\r\n                  <div className=\"divider\">\r\n                    <div className=\"divider-text\">\r\n                      {new Date().getDate() +\r\n                        \" \" +\r\n                        new Date().toLocaleString(\"default\", {\r\n                          month: \"short\"\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            let renderAvatar = () => {\r\n              if (i > 0) {\r\n                if (\r\n                  chat.isSent === true &&\r\n                  activeChat.msg[i - 1].isSent !== true\r\n                ) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={userImg}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else if (chat.isSent !== true) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={activeUser.photoURL}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else {\r\n                  return \"\"\r\n                }\r\n              } else {\r\n                return (\r\n                  <div className=\"chat-avatar\">\r\n                    <div className=\"avatar m-0\">\r\n                      <img\r\n                        src={chat.isSent ? userImg : activeUser.photoURL}\r\n                        alt=\"chat avatar\"\r\n                        height=\"40\"\r\n                        width=\"40\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            return (\r\n              <React.Fragment key={i}>\r\n                {renderSentTime()}\r\n                <div\r\n                  className={`chat ${\r\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\r\n                  }`}>\r\n                  {renderAvatar()}\r\n                  <div className=\"chat-body\">\r\n                    <div className=\"chat-content\">{chat.textContent}</div>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        : null\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"chat-app-window\">\r\n          <div\r\n            className={`start-chat-area ${\r\n              activeUser !== null ? \"d-none\" : \"d-flex\"\r\n            }`}>\r\n            <span className=\"mb-1 start-chat-icon\">\r\n              <MessageSquare size={50} />\r\n            </span>\r\n            <h4\r\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\r\n              onClick={() => {\r\n                if (this.props.mql.matches === false) {\r\n                  this.props.mainSidebar(true)\r\n                } else {\r\n                  return null\r\n                }\r\n              }}>\r\n              Start Conversation\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className={`active-chat ${\r\n              activeUser === null ? \"d-none\" : \"d-block\"\r\n            }`}>\r\n            <div className=\"chat_navbar\">\r\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div\r\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\r\n                    onClick={() => this.props.mainSidebar(true)}>\r\n                    <Menu size={24} />\r\n                  </div>\r\n                  <div\r\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\r\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\r\n                    <img\r\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\r\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\r\n                      height=\"40\"\r\n                      width=\"40\"\r\n                    />\r\n                    <span\r\n                      className={`\r\n                    ${\r\n                      activeUser !== null &&\r\n                      activeUser.status === \"do not disturb\"\r\n                        ? \"avatar-status-busy\"\r\n                        : activeUser !== null && activeUser.status === \"away\"\r\n                        ? \"avatar-status-away\"\r\n                        : activeUser !== null && activeUser.status === \"offline\"\r\n                        ? \"avatar-status-offline\"\r\n                        : \"avatar-status-online\"\r\n                    }\r\n                    `}\r\n                    />\r\n                  </div>\r\n                  <h6 className=\"mb-0\">\r\n                    {activeUser !== null ? activeUser.displayName : \"\"}\r\n                  </h6>\r\n                </div>\r\n                <span\r\n                  className=\"favorite\"\r\n                  onClick={() => {\r\n                    if (activeChat) {\r\n                      this.props.togglePinned(\r\n                        activeUser.uid,\r\n                        !activeChat.isPinned\r\n                      )\r\n                    }\r\n                  }}>\r\n                  <Star\r\n                    size={22}\r\n                    stroke={\r\n                      activeChat && activeChat.isPinned === true\r\n                        ? \"#FF9F43\"\r\n                        : \"#626262\"\r\n                    }\r\n                  />\r\n                </span>\r\n              </header>\r\n            </div>\r\n            <PerfectScrollbar\r\n              className=\"user-chats\"\r\n              options={{\r\n                wheelPropagation: false\r\n              }}\r\n              ref={el => {\r\n                this.chatArea = el\r\n              }}>\r\n              <div className=\"chats\">{renderChats}</div>\r\n            </PerfectScrollbar>\r\n            <div className=\"chat-app-form\">\r\n              <form\r\n                className=\"chat-app-input d-flex align-items-center\"\r\n                onSubmit={e => {\r\n                  e.preventDefault()\r\n                  this.handleSendMessage(\r\n                    activeUser.uid,\r\n                    false,\r\n                    this.state.msg,\r\n                    activeUser\r\n                  )\r\n                }}>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"message mr-1 ml-50\"\r\n                  placeholder=\"Type your message\"\r\n                  value={this.state.msg}\r\n                  onChange={e => {\r\n                    e.preventDefault()\r\n                    this.setState({\r\n                      msg: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n                <Button color=\"primary\">\r\n                  <Send className=\"d-lg-none\" size={15} />\r\n                  <span className=\"d-lg-block d-none\">Send</span>\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nclass ReceiverProfile extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeUser !== state.activeUser) {\r\n      return {\r\n        activeUser: props.activeUser\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    activeUser: null\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    return (\r\n      <div\r\n        className={`user-profile-sidebar ${\r\n          this.props.receiverProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"user-profile-header\">\r\n          <span\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </span>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={activeUser !== null ? activeUser.photoURL : null}\r\n                alt={activeUser !== null ? activeUser.displayName : null}\r\n                height=\"66\"\r\n                width=\"66\"\r\n              />\r\n              <span\r\n                className={`${\r\n                  activeUser !== null && activeUser.status === \"do not disturb\"\r\n                    ? \"avatar-status-busy\"\r\n                    : activeUser !== null && activeUser.status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : activeUser !== null && activeUser.status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">\r\n              {activeUser !== null ? activeUser.displayName : null}\r\n            </h4>\r\n          </div>\r\n        </header>\r\n        <PerfectScrollbar\r\n          className=\"user-profile-sidebar-area p-2\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h6>About</h6>\r\n          <p>{activeUser !== null ? activeUser.about : null}</p>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ReceiverProfile\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport { Input } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\r\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\nclass UserSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.chat.status !== state.status) {\r\n      return {\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    value:\r\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\r\n    status: null\r\n  }\r\n\r\n  render() {\r\n    const status = this.state.status\r\n    return (\r\n      <div\r\n        className={`chat-profile-sidebar ${\r\n          this.props.userProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"chat-profile-header\">\r\n          <div\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleUserSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </div>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\r\n              <span\r\n                className={`${\r\n                  status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : status === \"dnd\"\r\n                    ? \"avatar-status-busy\"\r\n                    : status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">John Doe</h4>\r\n          </div>\r\n        </header>\r\n        <div className=\"profile-sidebar-area\">\r\n          <PerfectScrollbar\r\n            className=\"scroll-area\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <h6>About</h6>\r\n            <div className=\"about-user\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"text\"\r\n                id=\"userAbout\"\r\n                rows=\"5\"\r\n                value={this.state.value}\r\n                maxLength=\"120\"\r\n                onChange={e => this.setState({ value: e.target.value })}\r\n              />\r\n              <small className=\"counter-value float-right\">\r\n                {`${this.state.value.length} / 120`}\r\n              </small>\r\n            </div>\r\n            <h3 className=\"mt-3\">Status</h3>\r\n            <ul className=\"list-unstyled user-status mb-0\">\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Active\"\r\n                  color=\"success\"\r\n                  defaultChecked={true}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"active\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Do Not Disturb\"\r\n                  color=\"danger\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"dnd\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Away\"\r\n                  color=\"warning\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"away\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Offline\"\r\n                  color=\"secondary\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"offline\")}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport ChatSidebarContent from \"./ChatSidebar\"\r\nimport ChatLog from \"./ChatLog\"\r\nimport ReceiverSidebar from \"./receiverProfile\"\r\nimport UserSidebar from \"./UserSidebar\"\r\nimport \"../../../assets/scss/pages/app-chat.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Chat extends React.Component {\r\n  state = {\r\n    userProfile: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    activeChatID: null,\r\n    activeChat: null,\r\n    activeUser: null,\r\n    receiverProfile: false,\r\n    userSidebar: false\r\n  }\r\n  // mounted = false\r\n  handleUserSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        userProfile: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        userProfile: false\r\n      })\r\n    }\r\n  }\r\n  handleActiveChat = (id, user, chats) => {\r\n    this.setState({\r\n      activeChatID: id,\r\n      activeUser: user,\r\n      activeChat: chats\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleReceiverSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          receiverProfile: true\r\n        })\r\n      : this.setState({\r\n          receiverProfile: false\r\n        })\r\n  }\r\n\r\n  handleUserSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          userSidebar: true\r\n        })\r\n      : this.setState({\r\n          userSidebar: false\r\n        })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-application position-relative\">\r\n        <div\r\n          className={`chat-overlay ${\r\n            this.state.receiverProfile ||\r\n            this.state.userSidebar ||\r\n            this.state.sidebarOpen\r\n              ? \"show\"\r\n              : \"d-none\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleReceiverSidebar(\"close\")\r\n            this.handleUserSidebar(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <ChatSidebarContent\r\n                  activeChatID={this.state.activeChatID}\r\n                  handleActiveChat={this.handleActiveChat}\r\n                  handleUserSidebar={this.handleUserSidebar}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              touch={false}\r\n              sidebarClassName=\"chat-sidebar\"\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <UserSidebar\r\n          userProfile={this.state.userSidebar}\r\n          handleUserSidebar={this.handleUserSidebar}\r\n        />\r\n        <ChatLog\r\n          activeChat={this.state.activeChat}\r\n          activeUser={this.state.activeUser}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          mql={mql}\r\n          handleActiveChat={this.handleActiveChat}\r\n        />\r\n        <ReceiverSidebar\r\n          activeUser={this.state.activeUser}\r\n          receiverProfile={this.state.receiverProfile}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n"],"sourceRoot":""}
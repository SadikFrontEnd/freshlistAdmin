{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","views/apps/todo/Todo.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js"],"names":["defineProperty","module","exports","target","i","arguments","length","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","getTodos","routeParams","dispatch","axios","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","TodoSidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","history","TodoList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","searchTask","match","app","routerFilter","todosArr","filteredTodos","renderTodos","map","icon","label","checked","stopPropagation","onChange","title","tags","tag","trashTask","desc","FormGroup","Input","placeholder","routeParam","todoApp","getState","post","response","val","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","rows","updateTask","addNewTask","disabled","outline","task","mql","window","matchMedia","TODO","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","_excluded","propTypes","children","PropTypes","node","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","row","check","inline","CheckBoxesVuexy","defaultChecked","defaultStyles","position","top","left","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","componentDidMount","isIos","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","width","offsetWidth","innerWidth","min","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarId","overlayClassName","overlayId","contentId"],"mappings":"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","file":"static/js/92.7c43a32e.chunk.js","sourcesContent":["var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import axios from \"axios\"\r\nimport { history } from \"../../../history\"\r\n\r\nexport const getTodos = routeParams => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get(\"api/apps/todo\", {\r\n        params: routeParams\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"GET_TODOS\",\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = todo => {\r\n  return dispatch => {\r\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = todo => {\r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = todo => {\r\n  \r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = id => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post(\"/api/app/todo/trash-todo\", id)\r\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = todo => {\r\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then(response => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: \"UPDATE_TODO\",\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, title, desc) => {\r\n  return dispatch => {\r\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = task => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios.post(\"/api/apps/todo/new-task\", { task }).then(response => {\r\n      dispatch({ type: \"ADD_TASK\", task })\r\n      dispatch(getTodos(params))\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = val => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_TASK\",\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`/todo/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Button, ListGroup, ListGroupItem } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { X, Layers, Star, Info, Check, Trash } from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeFilter } from \"../../../redux/actions/todo/index\"\r\nclass TodoSidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block my-1\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.addTask(\"open\")\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Task\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"all\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/all\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"starred\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/starred\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Starred</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"important\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/important\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Info size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"completed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/completed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"trashed\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/trashed\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"frontend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/frontend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Frontend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"backend\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/backend\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Backend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"doc\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/doc\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Doc</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter(\"bug\")\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === \"/todo/bug\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">Bug</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(TodoSidebar)\r\n","import React from \"react\"\r\nimport { FormGroup, Input } from \"reactstrap\"\r\nimport { Menu, Search, Check, Info, Star, Trash } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from \"../../../redux/actions/todo/index\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nclass TodoList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: \"\"\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          return (\r\n            <li\r\n              className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                <div className=\"todo-title-area d-flex align-items-center\">\r\n                  <div className=\"title-wrapper d-flex\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={\"\"}\r\n                      checked={todo.isCompleted}\r\n                      size=\"sm\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.completeTask(todo)\r\n                      }}\r\n                      onChange={e => e.stopPropagation()}\r\n                    />\r\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                  </div>\r\n                  {todo.tags.length > 0 ? (\r\n                    <div className=\"chip-wrapper\">\r\n                      {todo.tags.map((tag, i) => (\r\n                        <div className=\"chip mb-0\" key={i}>\r\n                          <div className=\"chip-body\">\r\n                            <span className=\"chip-text\">\r\n                              <span\r\n                                className={`bullet bullet-${\r\n                                  tag === \"backend\"\r\n                                    ? \"warning\"\r\n                                    : tag === \"doc\"\r\n                                    ? \"success\"\r\n                                    : tag === \"bug\"\r\n                                    ? \"danger\"\r\n                                    : \"primary\"\r\n                                } bullet-xs`}\r\n                              />\r\n                              <span className=\"text-capitalize ml-25\">\r\n                                {tag}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  className={`todo-item-action d-flex ${\r\n                    routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`todo-item-info d-inline-block ${\r\n                      routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\r\n                    }`}\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.importantTask(todo)\r\n                    }}\r\n                  >\r\n                    <Info\r\n                      size={17}\r\n                      className={`${todo.isImportant ? \"text-success\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                    onClick={e => {\r\n                      e.stopPropagation()\r\n                      this.props.starTask(todo)\r\n                    }}\r\n                  >\r\n                    <Star\r\n                      size={17}\r\n                      className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\r\n                    />\r\n                  </div>\r\n                  {routerFilter !== \"trashed\" ? (\r\n                    <div\r\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.trashTask(todo.id)\r\n                      }}\r\n                    >\r\n                      <Trash size={17} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              {todo.desc.length > 0 ? (\r\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={e => this.handleOnChange(e)}\r\n                    value={value}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(TodoList)\r\n","import React from \"react\"\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from \"reactstrap\"\r\nimport { X, Info, Star, Tag, Check } from \"react-feather\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from \"../../../redux/actions/todo/index\"\r\nclass TaskSidebar extends React.Component {\r\n\r\n  // static getDerivedStateFromProps (props, state){\r\n  //   if (\r\n  //    ( props.taskToUpdate !== null &&\r\n  //     props.taskToUpdate.title !== state.taskTitle) ||\r\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\r\n  //   ) {\r\n  //     let todosArr = props.app.todo.todos\r\n  //     let receivedTask =\r\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\r\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\r\n  //     let taskToUpdate, taskTitle, taskDesc\r\n  //     filteredTask.map(task => {\r\n  //       return (\r\n  //         (taskToUpdate = task),\r\n  //         (taskTitle = task.title),\r\n  //         (taskDesc = task.desc)\r\n  //       )\r\n  //     })\r\n  //     return {\r\n  //       taskToUpdate,\r\n  //       taskTitle,\r\n  //       taskDesc\r\n  //     }\r\n  //   }\r\n  //   return null\r\n  // }\r\n\r\n  state = {\r\n    taskToUpdate: null,\r\n    taskTitle: \"\",\r\n    taskDesc: \"\",\r\n    taskStatus : false,\r\n    taskStarred : false,\r\n    taskImportant  : false,\r\n    newTask: {\r\n      title: \"\",\r\n      desc: \"\",\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(\r\n      (this.props.taskToUpdate !== null && this.state.taskToUpdate !== this.props.taskToUpdate) || \r\n      (this.props.taskToUpdate !== null && this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null && this.state.taskImportant !== this.props.taskToUpdate.isImportant) \r\n      ){\r\n      this.setState({ \r\n        taskToUpdate : this.props.taskToUpdate, \r\n        taskTitle :  this.props.taskToUpdate.title,\r\n        taskDesc :  this.props.taskToUpdate.desc,\r\n        taskStatus : this.props.taskToUpdate.isCompleted,\r\n        taskStarred : this.props.taskToUpdate.isStarred,\r\n        taskImportant : this.props.taskToUpdate.isImportant\r\n      })\r\n    }\r\n    else{\r\n      return \r\n    }\r\n  }\r\n  \r\n\r\n\r\n  handleNewTaskTags = tag => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = taskArr => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === \"backend\"\r\n                  ? \"warning\"\r\n                  : tag === \"doc\"\r\n                  ? \"success\"\r\n                  : tag === \"bug\"\r\n                  ? \"danger\"\r\n                  : \"primary\"\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } = this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? \"show\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? \"Update Task\"\r\n                  : \"Add Task\"}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => this.props.addTask(\"close\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && <Checkbox\r\n                  color=\"primary\"\r\n                  className=\"user-checkbox\"\r\n                  icon={<Check className=\"vx-icon\" size={15} />}\r\n                  label={\"\"}\r\n                  checked={ taskStatus }                  \r\n                  onChange={e =>  {\r\n                    this.props.completeTask(this.props.taskToUpdate)\r\n                  }}\r\n                />}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Info\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null && this.state.taskImportant) ||\r\n                      newTask.isImportant \r\n                      ? \"text-success\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isImportant : !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                      \r\n                  }}\r\n                />\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                      (this.props.taskToUpdate !== null  && this.state.taskStarred) ||\r\n                      newTask.isStarred \r\n                      ? \"text-warning\"\r\n                      : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null){\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    }\r\n                    else{\r\n                      this.setState({\r\n                        newTask : {\r\n                          ...this.state.newTask,\r\n                          isStarred : !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                    \r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Frontend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"frontend\") )||\r\n                            (newTask.tags.includes(\"frontend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\")\r\n                          else this.handleNewTaskTags(\"frontend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Backend\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"backend\"))||\r\n                            (newTask.tags.includes(\"backend\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"backend\")\r\n                            else this.handleNewTaskTags(\"backend\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Doc\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"doc\"))||\r\n                            (newTask.tags.includes(\"doc\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"doc\")\r\n                          else this.handleNewTaskTags(\"doc\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={\"Bug\"}\r\n                        checked={\r\n                            (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\"bug\"))||\r\n                            (newTask.tags.includes(\"bug\"))\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={e => e.stopPropagation()}\r\n                        onChange={e => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, \"bug\")\r\n                          else this.handleNewTaskTags(\"bug\")\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle : e.target.value\r\n                    })\r\n                  }else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      title : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={e => {\r\n                  if (this.props.taskToUpdate !== null){\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  }\r\n                  else{\r\n                    this.setState({ newTask : {\r\n                      ...this.state.newTask,\r\n                      desc : e.target.value\r\n                    } })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n\r\n            <hr className=\"my-2\" />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <Button.Ripple\r\n                className=\"mr-50\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? \"Update\"\r\n                  : \"Add\"}\r\n              </Button.Ripple>\r\n              <Button.Ripple\r\n                color=\"light\"\r\n                outline\r\n                onClick={() => {\r\n                  this.props.addTask(\"close\")\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: \"\",\r\n                      desc: \"\",\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>\r\n            </div> \r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport TodoSidebar from \"./TodoSidebar\"\r\nimport TodoList from \"./TodoList\"\r\nimport TaskSidebar from \"./TaskSidebar\"\r\nimport \"../../../assets/scss/pages/app-todo.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass TODO extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = status => {\r\n    status === \"open\"\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = todo => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = arr => {\r\n    this.setState({\r\n      prevState: arr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleAddTask(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <TodoSidebar\r\n                  routerProps={this.props}\r\n                  addTask={this.handleAddTask}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <TodoList\r\n          routerProps={this.props}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          prevState={this.state.prevState}\r\n        />\r\n        <TaskSidebar\r\n          addTask={this.handleAddTask}\r\n          addTaskState={this.state.addTask}\r\n          taskToUpdate={this.state.taskToUpdate}\r\n          newTask={this.state.newTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          handleUndoChanges={this.handleUndoChanges}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TODO\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n"],"sourceRoot":""}